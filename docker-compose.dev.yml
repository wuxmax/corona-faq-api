version: "3"

services:
  proxy:
    image: traefik:v2.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Enable Docker Swarm mode
      # - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api.insecure=true
    ports:
    - "80:80"
    - "8080:8080"

  es:
    depends_on: 
      - proxy
    image: elasticsearch:7.10.1
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
    environment:
       - discovery.type=single-node
    labels:
        - traefik.enable=true
        - traefik.http.routers.${PROJECT_NAME}-es-http.rule=Host(`es.${PROJECT_NAME}.${DOMAIN}`)
  
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    depends_on:
      - proxy
      - es
    volumes:
      - ./api/app/:/app/
      - ./embedding-models/:/models/
#    environment:
#       - LOGLEVEL=debug
    command: /start-reload.sh
    labels:
      - traefik.enable=true
      - traefik.http.routers.${PROJECT_NAME}-api-http.rule=Host(`${PROJECT_NAME}.${DOMAIN}`)
    ports:
      - "$PROD_PORT:80"
      
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    depends_on:
      - proxy
      - es
    environment:
      - SERVER_NAME=kibana.${PROJECT_NAME}.${DOMAIN}
      - ELASTICSEARCH_HOSTS=http://es:9200
    labels: 
      - traefik.enable=true
      - traefik.http.routers.${PROJECT_NAME}-kibana-http.rule=Host(`kibana.${PROJECT_NAME}.${DOMAIN}`)